name: Notenmanager Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn test
      - name: jacoco-badge-generator
        uses: cicirello/jacoco-badge-generator@v2
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push https://$GH_TOKEN@github.com/keykeyHftm/java-calculator.git
          fi
          

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: 0da5abffccc7b33decadba7b5d6b1dbbb6eca9e0
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: my-custom-directory
          args: >
            -Dsonar.organization=my-organization
            -Dsonar.projectKey=my-projectkey
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=lib/
            -Dsonar.test.exclusions=tests/**
            -Dsonar.tests=tests/
            -Dsonar.verbose=true
      - name: Clean the workspace
        uses: docker://alpine
        with:
          args: /bin/sh -c "find \"${GITHUB_WORKSPACE}\" -mindepth 1 ! -name . -prune -exec rm -rf {} +"